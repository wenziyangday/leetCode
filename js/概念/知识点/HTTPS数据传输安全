HTTP传输流程：
  明文传输
  中间人攻击：
    在传输的每一个环节都有可能被第三方窃取和篡改，具体来说，HTTP数据经历TCP层，然后经过WiFi路由器、运营商和目标服务器，这些环节中都可能被中间人拿到数据并进行篡改

HTTPS原理：
  在HTTP和tcp之间建立一个中间层（安全层），这个中间层是将HTTP和TCP之间的通信进行加密，将加密后的数据包传给TCP，响应时，TCP必须将数据包解密后，才能传给上面的HTTP
  安全层的核心就是对数据的加解密

  对称加密：
    加密和解密用的是同样的秘钥

  非对称加密：
    如果有A，B两把密钥，A加密的数据包只能用B解密，反之，如果用B加密过的数据包只能用A解密

  对称和非对称加密的加解密过程：
    1）浏览器会给服务器发送一个随机数client_random和一个加密的方法列表
    2）服务器接收后给浏览器返回另一个随机数sever_random和加密方法
    3）两者拥有三样相同的凭证：client_random、server_random和加密方法
    4）通过这个加密方法将两个随机数混合起来生成密钥（暗号），这个密钥就是浏览器和服务器端通信的暗号

  非对称加密隐患：
    公钥加密的数据需要私钥解密，而私钥加密的数据也是可以通过公钥解密的，因此无法保证安全性的
    而且服务器的数据只能进行私钥加密（使用公钥加密浏览器就无法解密），所以中间人如果拿到公钥就能对服务端传来的数据进行解密了
    同时只采用非对称加密，对于服务器的性能的消耗也是相当巨大的

  对称加密和非对称加密结合：
      1）浏览器向服务器发送 client_random和加密方法列表
      2）服务器接收到后，返回server_random 、加密方法和公钥
      3）浏览器接收后，生成另一个随机数pre_random,并且用公钥加密，传给服务器
      4）服务器用私钥解密这个被加密后的pre_random

  服务器、浏览器：
    都会拥有client_random、server_random、pre_random、通过加密方法将这三个东西混合，生成最终的秘钥（对称加密）

  HTTPS的CA证书：
    作用：
      服务器向浏览器证明自己的身份
      将公钥传给浏览器

    1）传输过程：
      在服务器发送server_random、加密方法的时候，同时把数字证书（包含公钥），接着浏览器接收之后就会开始验证数字证书。如果验证通过，那么后面的过程正常进行，否则再见

    2）认证过程：
      a）读取证书内容。CA进行数字认证签名时会保存一个Hash函数，通过这个函数进行计算明文内容 信息A，通过公钥解析明文内容得到 信息B 如果信息A 和信息B 一致，则表示合法。
      b）浏览器逐级查找上级CA的CA 用 a）的方法进行验证，直到找到根级证书，没有找到则是不合法的。


总结：
  HTTPS不是一个新的协议，他是在HTTP和TCP的传输中建立了一个新的中间层（安全层），利用对称加密和非对称加密结合数字证书认证的方式，从而提高安全性能。






