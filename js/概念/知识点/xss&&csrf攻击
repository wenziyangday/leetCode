xss攻击：
  概念：
    浏览器中执行恶意脚本（无论跨域还是同域），从而拿到用户的信息进行操作

  实现方式：
    1）存储型
      将恶意脚本存储到数据库，然后在客户端执行这些脚本，从而达到攻击效果
    2）反射型
      恶意脚本作为网络请求的一部分
      示例：<script>http://sanyuan.com?q=<script>alert('sd')</script>
    3）文档型
      文档型的xss攻击并不会经过服务端，而是作为中间人的角色，在数据传输过程中劫持到网络数据包，然后修改到html文档


  防范xss攻击：
    1）不要相信用户输入（对用户输入内容进行转码或者过滤，让其不可执行）
    2）利用csp(浏览器的内容安全策略)
      a）限制其他域中的资源加载
      b）禁止向其它域提交数据
      c）提供上报机制，能帮助我们及时发现xss攻击
    3）利用HttpOnly
      设置cookie的httponly属性后，js无法读取Cookie的值


csrf攻击：
  概念：
    跨站请求伪造
    获取用户登录状态从而发送跨站请求
  形式：
    1）自动发送get 请求
    2）自动发post 请求
    3）诱导点击发送get请求

  防范措施：
    1）利用cookie的sameSite属性
      sameSite的三个值：
        a）浏览器完全禁止第三方请求携带cookie
        b）Lax只能get方法提交表单或者a标签发送get 请求的情况下可以携带cookie
        c）None 请求会自动携带cookie
    2）验证来源站点
      通过请求头部的Origin 和 Referer 进行域名或者url指定
    3）CSRF Token
      浏览器发送请求时，服务器生成一个字符串，将其植入到返回页面，每次浏览器发送请求必须携带这个字符串进行合法性验证

