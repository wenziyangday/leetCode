{
  /**
   * tree shaking 及其工作原理
   * 是通过清除多余代码方式来优化项目打包体积的技术
   *
   * 原理：
   *  ES6 Modules引入进行静态分析，故而编译的时候正确判断到底加载了那些模块
   *  静态分析程序流，判断哪些模块和变量未被使用或者引用，进而删除对应的代码
   * */
}

{
  /**
   * base64 编码的思想：
   *  采用64个基本的ASCII码字符对数据进行重新编码，它将需要编码的数据拆分成字节数组。
   *  以3个字节为一组，按顺序排列24位数据，再把24位数据分为4组即每组6位，再在每组的最高位前补两个0凑足一个字节。
   *  这样就把一个3字节为一组的数据重新编码成了4个字节。当所要编码的数据的字节数不是3的整倍数，也就是说在分组时最后一组不够3个字节。这是最后一组填充1到2个0字节
   *  并在最后编码完成后在结尾添加1到2个'='
   *
   *  通过base64编码后，原来的3个字节编码后将成为4个字节，即字节增加了333%，数据量相应增大
   * */
}

{
  /**
   * 浏览器和node 中的事件循环区别：
   *  浏览器：
   *    先进行宏任务
   *    然后进入微任务进行执行
   *
   *  浏览器的EventLoop和nodejs 的区别：
   *    浏览器在处理微任务时候，是在宏任务执行完毕后进行执行的
   *    nodejs中的微任务是在EventLoop不同阶段间进行执行的
   * */
}

{
  /**
   * 给对象实现一个Iterator迭代器 TODO
   * */
}

{
  /**
   * enumerable （控制属性是否可以通过获取）
   * for ... in
   * Object.keys
   * JSON.stringify
   * */
}

{
  /**
   * promise 一旦创建，就无法取消，所以本质上是无法终止的
   *  1.中断调用链
   *    就是在某个then或者catch执行之后，不想继续执行之后
   *      通过抛出错误
   *  2.中断promise
   *    这里的中断不是终止
   *      通过设置延迟抛错来中断promise
   * */
}

